// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/job/job.proto

package crocodile_srv_job

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Taskname             string               `protobuf:"bytes,2,opt,name=taskname,proto3" json:"taskname"`
	Command              string               `protobuf:"bytes,3,opt,name=command,proto3" json:"command"`
	Cronexpr             string               `protobuf:"bytes,4,opt,name=cronexpr,proto3" json:"cronexpr"`
	Timeout              int32                `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout"`
	Remark               string               `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	Createdby            string               `protobuf:"bytes,7,opt,name=createdby,proto3" json:"createdby"`
	Stop                 bool                 `protobuf:"varint,8,opt,name=stop,proto3" json:"stop"`
	Nexttime             *timestamp.Timestamp `protobuf:"bytes,10,opt,name=nexttime,proto3" json:"nexttime"`
	Actuator             string               `protobuf:"bytes,11,opt,name=actuator,proto3" json:"actuator"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *Task) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *Task) GetCronexpr() string {
	if m != nil {
		return m.Cronexpr
	}
	return ""
}

func (m *Task) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Task) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Task) GetCreatedby() string {
	if m != nil {
		return m.Createdby
	}
	return ""
}

func (m *Task) GetStop() bool {
	if m != nil {
		return m.Stop
	}
	return false
}

func (m *Task) GetNexttime() *timestamp.Timestamp {
	if m != nil {
		return m.Nexttime
	}
	return nil
}

func (m *Task) GetActuator() string {
	if m != nil {
		return m.Actuator
	}
	return ""
}

type Response struct {
	Tasks                []*Task  `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks"`
	Regips               []string `protobuf:"bytes,3,rep,name=regips,proto3" json:"regips"`
	Code                 int32    `protobuf:"varint,4,opt,name=code,proto3" json:"code"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Response) GetRegips() []string {
	if m != nil {
		return m.Regips
	}
	return nil
}

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Task)(nil), "crocodile.srv.job.Task")
	proto.RegisterType((*Response)(nil), "crocodile.srv.job.Response")
}

func init() { proto.RegisterFile("proto/job/job.proto", fileDescriptor_4f60868841c20a44) }

var fileDescriptor_4f60868841c20a44 = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xdd, 0xae, 0x93, 0x4c,
	0x14, 0xfd, 0x28, 0xfd, 0xa1, 0xbb, 0x9f, 0x26, 0x8e, 0x89, 0x4e, 0xaa, 0x09, 0xa4, 0x89, 0x09,
	0x89, 0x39, 0x34, 0xa9, 0x2f, 0xa0, 0xa7, 0x27, 0x31, 0xd1, 0xbb, 0xc9, 0x79, 0x81, 0x01, 0x46,
	0x0e, 0xa7, 0xc0, 0x26, 0xcc, 0x60, 0x8e, 0x4f, 0xe2, 0x85, 0xef, 0xc6, 0x03, 0xf0, 0x14, 0x66,
	0x86, 0x0e, 0x5c, 0xa8, 0x57, 0x5c, 0xb4, 0xac, 0xbd, 0x58, 0xac, 0xbd, 0x67, 0xed, 0x81, 0x97,
	0x75, 0x83, 0x0a, 0x8f, 0x8f, 0x18, 0xeb, 0x5f, 0x64, 0x2a, 0xf2, 0x22, 0x69, 0x30, 0xc1, 0x34,
	0x2f, 0x44, 0x24, 0x9b, 0xef, 0xd1, 0x23, 0xc6, 0x7b, 0x3f, 0x43, 0xcc, 0x0a, 0x71, 0x34, 0x82,
	0xb8, 0xfd, 0x76, 0x54, 0x79, 0x29, 0xa4, 0xe2, 0x65, 0x3d, 0x7c, 0xb3, 0xbf, 0xc9, 0x72, 0xf5,
	0xd0, 0xc6, 0x51, 0x82, 0xe5, 0x31, 0xc3, 0x0c, 0x27, 0xa5, 0xae, 0x86, 0x2e, 0x1a, 0x0d, 0xf2,
	0xc3, 0x4f, 0x17, 0x96, 0xf7, 0x5c, 0x5e, 0xc8, 0x73, 0x58, 0xe4, 0x29, 0x75, 0x02, 0x27, 0x5c,
	0xb1, 0x45, 0x9e, 0x92, 0x10, 0x3c, 0xc5, 0xe5, 0xa5, 0xe2, 0xa5, 0xa0, 0x8b, 0xc0, 0x09, 0xb7,
	0xb7, 0xff, 0xf7, 0x9d, 0x3f, 0x72, 0x6c, 0x44, 0xe4, 0x1d, 0x6c, 0x12, 0x2c, 0x4b, 0x5e, 0xa5,
	0xd4, 0x35, 0xc2, 0x5d, 0xdf, 0xf9, 0x96, 0x62, 0x16, 0x68, 0xc3, 0xa4, 0xc1, 0x4a, 0x3c, 0xd5,
	0x0d, 0x5d, 0x4e, 0x86, 0x96, 0x63, 0x23, 0xd2, 0x86, 0xfa, 0x54, 0xd8, 0x2a, 0xba, 0xd2, 0xf3,
	0x0c, 0x86, 0x57, 0x8a, 0x59, 0x40, 0x0e, 0xb0, 0x6e, 0x44, 0xc9, 0x9b, 0x0b, 0x5d, 0x1b, 0x3b,
	0xe8, 0x3b, 0xff, 0xca, 0xb0, 0xeb, 0x93, 0xbc, 0x87, 0x6d, 0xd2, 0x08, 0xae, 0x44, 0x1a, 0xff,
	0xa0, 0x1b, 0x23, 0x7b, 0xd6, 0x77, 0xfe, 0x44, 0xb2, 0x09, 0x92, 0xb7, 0xb0, 0x94, 0x0a, 0x6b,
	0xea, 0x05, 0x4e, 0xe8, 0xdd, 0x7a, 0x7d, 0xe7, 0x9b, 0x9a, 0x99, 0x7f, 0x72, 0x07, 0x5e, 0x25,
	0x9e, 0x94, 0xee, 0x4e, 0x21, 0x70, 0xc2, 0xdd, 0x69, 0x1f, 0x0d, 0xcb, 0x88, 0x6c, 0xc4, 0xd1,
	0xbd, 0x5d, 0xc6, 0x70, 0x36, 0xab, 0x67, 0x23, 0xd2, 0x29, 0xf0, 0x44, 0xb5, 0x5c, 0x61, 0x43,
	0x77, 0x53, 0x0a, 0x96, 0x63, 0x23, 0x3a, 0x08, 0xf0, 0x98, 0x90, 0x35, 0x56, 0x52, 0x90, 0x1b,
	0x58, 0xe9, 0xb8, 0x25, 0x75, 0x02, 0x37, 0xdc, 0x9d, 0x5e, 0x47, 0x7f, 0x5c, 0x8c, 0x48, 0x2f,
	0x91, 0x0d, 0x2a, 0xf2, 0x4a, 0x27, 0x93, 0xe5, 0xb5, 0xa4, 0x6e, 0xe0, 0x86, 0x5b, 0x76, 0xad,
	0x08, 0x81, 0x65, 0x82, 0xa9, 0x30, 0xf1, 0xaf, 0x98, 0xc1, 0xa7, 0x5f, 0x2e, 0xb8, 0x5f, 0x30,
	0x26, 0x67, 0xd8, 0x9e, 0x4d, 0x12, 0xba, 0xf8, 0x57, 0x83, 0xfd, 0x9b, 0xbf, 0xbc, 0xb0, 0x53,
	0x1e, 0xfe, 0xd3, 0x26, 0x77, 0xa2, 0x10, 0xb3, 0x4d, 0xce, 0x0f, 0xbc, 0xca, 0x66, 0x99, 0x7c,
	0x84, 0xf5, 0x67, 0xa1, 0xe6, 0x38, 0x7c, 0x82, 0xcd, 0xd7, 0xbc, 0x28, 0x66, 0x0e, 0xc1, 0xda,
	0x6a, 0x86, 0x43, 0xbc, 0x36, 0x57, 0xeb, 0xc3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x79,
	0x2f, 0xb6, 0x1f, 0x04, 0x00, 0x00,
}
