// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/tasklog/tasklog.proto

package crocodile_srv_tasklog

import (
	executor "crocodile/service/executor/proto/executor"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaskResLog struct {
	// 执行的任务信息
	Executemsg           *executor.ExecuteMsg `protobuf:"bytes,1,opt,name=executemsg,proto3" json:"executemsg,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Output               string               `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Err                  string               `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TaskResLog) Reset()         { *m = TaskResLog{} }
func (m *TaskResLog) String() string { return proto.CompactTextString(m) }
func (*TaskResLog) ProtoMessage()    {}
func (*TaskResLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7009214e77ec2edc, []int{0}
}

func (m *TaskResLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResLog.Unmarshal(m, b)
}
func (m *TaskResLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResLog.Marshal(b, m, deterministic)
}
func (m *TaskResLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResLog.Merge(m, src)
}
func (m *TaskResLog) XXX_Size() int {
	return xxx_messageInfo_TaskResLog.Size(m)
}
func (m *TaskResLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResLog.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResLog proto.InternalMessageInfo

func (m *TaskResLog) GetExecutemsg() *executor.ExecuteMsg {
	if m != nil {
		return m.Executemsg
	}
	return nil
}

func (m *TaskResLog) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TaskResLog) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *TaskResLog) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *TaskResLog) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type QueryLog struct {
	Taskname             string               `protobuf:"bytes,1,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Fromtime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=fromtime,proto3" json:"fromtime,omitempty"`
	Totime               *timestamp.Timestamp `protobuf:"bytes,3,opt,name=totime,proto3" json:"totime,omitempty"`
	Limit                int32                `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32                `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *QueryLog) Reset()         { *m = QueryLog{} }
func (m *QueryLog) String() string { return proto.CompactTextString(m) }
func (*QueryLog) ProtoMessage()    {}
func (*QueryLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7009214e77ec2edc, []int{1}
}

func (m *QueryLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryLog.Unmarshal(m, b)
}
func (m *QueryLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryLog.Marshal(b, m, deterministic)
}
func (m *QueryLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryLog.Merge(m, src)
}
func (m *QueryLog) XXX_Size() int {
	return xxx_messageInfo_QueryLog.Size(m)
}
func (m *QueryLog) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryLog.DiscardUnknown(m)
}

var xxx_messageInfo_QueryLog proto.InternalMessageInfo

func (m *QueryLog) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *QueryLog) GetFromtime() *timestamp.Timestamp {
	if m != nil {
		return m.Fromtime
	}
	return nil
}

func (m *QueryLog) GetTotime() *timestamp.Timestamp {
	if m != nil {
		return m.Totime
	}
	return nil
}

func (m *QueryLog) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *QueryLog) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type RespLog struct {
	Logs                 []*SimpleLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Count                int32        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RespLog) Reset()         { *m = RespLog{} }
func (m *RespLog) String() string { return proto.CompactTextString(m) }
func (*RespLog) ProtoMessage()    {}
func (*RespLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7009214e77ec2edc, []int{2}
}

func (m *RespLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespLog.Unmarshal(m, b)
}
func (m *RespLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespLog.Marshal(b, m, deterministic)
}
func (m *RespLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespLog.Merge(m, src)
}
func (m *RespLog) XXX_Size() int {
	return xxx_messageInfo_RespLog.Size(m)
}
func (m *RespLog) XXX_DiscardUnknown() {
	xxx_messageInfo_RespLog.DiscardUnknown(m)
}

var xxx_messageInfo_RespLog proto.InternalMessageInfo

func (m *RespLog) GetLogs() []*SimpleLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *RespLog) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SimpleLog struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Taskname             string               `protobuf:"bytes,2,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Command              string               `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Cronexpr             string               `protobuf:"bytes,4,opt,name=cronexpr,proto3" json:"cronexpr,omitempty"`
	Createdby            string               `protobuf:"bytes,5,opt,name=createdby,proto3" json:"createdby,omitempty"`
	Timeout              int32                `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Actuator             string               `protobuf:"bytes,7,opt,name=actuator,proto3" json:"actuator,omitempty"`
	Runhost              string               `protobuf:"bytes,8,opt,name=runhost,proto3" json:"runhost,omitempty"`
	Starttime            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Endtime              *timestamp.Timestamp `protobuf:"bytes,10,opt,name=endtime,proto3" json:"endtime,omitempty"`
	Output               string               `protobuf:"bytes,11,opt,name=output,proto3" json:"output,omitempty"`
	Err                  string               `protobuf:"bytes,12,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SimpleLog) Reset()         { *m = SimpleLog{} }
func (m *SimpleLog) String() string { return proto.CompactTextString(m) }
func (*SimpleLog) ProtoMessage()    {}
func (*SimpleLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_7009214e77ec2edc, []int{3}
}

func (m *SimpleLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleLog.Unmarshal(m, b)
}
func (m *SimpleLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleLog.Marshal(b, m, deterministic)
}
func (m *SimpleLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleLog.Merge(m, src)
}
func (m *SimpleLog) XXX_Size() int {
	return xxx_messageInfo_SimpleLog.Size(m)
}
func (m *SimpleLog) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleLog.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleLog proto.InternalMessageInfo

func (m *SimpleLog) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SimpleLog) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *SimpleLog) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *SimpleLog) GetCronexpr() string {
	if m != nil {
		return m.Cronexpr
	}
	return ""
}

func (m *SimpleLog) GetCreatedby() string {
	if m != nil {
		return m.Createdby
	}
	return ""
}

func (m *SimpleLog) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *SimpleLog) GetActuator() string {
	if m != nil {
		return m.Actuator
	}
	return ""
}

func (m *SimpleLog) GetRunhost() string {
	if m != nil {
		return m.Runhost
	}
	return ""
}

func (m *SimpleLog) GetStarttime() *timestamp.Timestamp {
	if m != nil {
		return m.Starttime
	}
	return nil
}

func (m *SimpleLog) GetEndtime() *timestamp.Timestamp {
	if m != nil {
		return m.Endtime
	}
	return nil
}

func (m *SimpleLog) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *SimpleLog) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_7009214e77ec2edc, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TaskResLog)(nil), "crocodile.srv.tasklog.TaskResLog")
	proto.RegisterType((*QueryLog)(nil), "crocodile.srv.tasklog.QueryLog")
	proto.RegisterType((*RespLog)(nil), "crocodile.srv.tasklog.RespLog")
	proto.RegisterType((*SimpleLog)(nil), "crocodile.srv.tasklog.SimpleLog")
	proto.RegisterType((*Empty)(nil), "crocodile.srv.tasklog.Empty")
}

func init() { proto.RegisterFile("proto/tasklog/tasklog.proto", fileDescriptor_7009214e77ec2edc) }

var fileDescriptor_7009214e77ec2edc = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x93, 0x38, 0x8e, 0x27, 0x08, 0xa1, 0x15, 0x20, 0xcb, 0x54, 0x34, 0xf2, 0x29, 0x27,
	0x5b, 0x0a, 0x15, 0xea, 0x19, 0x54, 0x71, 0xa0, 0x3d, 0xb0, 0x84, 0x0f, 0x70, 0xec, 0x8d, 0xb1,
	0xea, 0xf5, 0x5a, 0xbb, 0xe3, 0xaa, 0xf9, 0x20, 0xfe, 0x83, 0xef, 0xe1, 0xce, 0x1d, 0xed, 0xae,
	0xed, 0x90, 0xaa, 0x51, 0x73, 0x8a, 0xdf, 0xe4, 0xcd, 0xf3, 0xbc, 0x99, 0x67, 0x78, 0xd7, 0x48,
	0x81, 0x22, 0xc1, 0x54, 0xdd, 0x55, 0xa2, 0xe8, 0x7f, 0x63, 0x53, 0x25, 0x6f, 0x32, 0x29, 0x32,
	0x91, 0x97, 0x15, 0x8b, 0x95, 0xbc, 0x8f, 0xbb, 0x3f, 0xc3, 0xab, 0xa1, 0x9c, 0x28, 0x26, 0xef,
	0xcb, 0x8c, 0x25, 0xec, 0x81, 0x65, 0x2d, 0x0a, 0x99, 0x58, 0xb9, 0x01, 0xf6, 0x0f, 0x56, 0x30,
	0xbc, 0x28, 0x84, 0x28, 0x2a, 0x66, 0x59, 0x9b, 0x76, 0x9b, 0x60, 0xc9, 0x99, 0xc2, 0x94, 0x37,
	0x96, 0x10, 0xfd, 0x71, 0x00, 0xd6, 0xa9, 0xba, 0xa3, 0x4c, 0xdd, 0x88, 0x82, 0x7c, 0x02, 0xb0,
	0x0a, 0x8c, 0xab, 0x22, 0x70, 0x16, 0xce, 0x72, 0xbe, 0x8a, 0xe2, 0xc3, 0xa9, 0x86, 0x57, 0x5c,
	0x5b, 0xe6, 0xad, 0x2a, 0xe8, 0x7f, 0x5d, 0xe4, 0x0a, 0x7c, 0x85, 0xa9, 0xc4, 0x75, 0xc9, 0x59,
	0x30, 0x32, 0x12, 0x61, 0x6c, 0xe7, 0x88, 0xfb, 0x39, 0xe2, 0x75, 0x3f, 0x07, 0xdd, 0x93, 0xc9,
	0x25, 0x78, 0xac, 0xce, 0x4d, 0xdf, 0xf8, 0xd9, 0xbe, 0x9e, 0x4a, 0xde, 0xc2, 0x54, 0xb4, 0xd8,
	0xb4, 0x18, 0x4c, 0x16, 0xce, 0xd2, 0xa7, 0x1d, 0x22, 0xaf, 0x60, 0xcc, 0xa4, 0x0c, 0xa6, 0xa6,
	0xa8, 0x1f, 0xa3, 0xdf, 0x0e, 0xcc, 0xbe, 0xb5, 0x4c, 0xee, 0xb4, 0xd5, 0x10, 0x66, 0x7a, 0xbf,
	0x75, 0xca, 0x99, 0x31, 0xea, 0xd3, 0x01, 0x93, 0x8f, 0x30, 0xdb, 0x4a, 0xc1, 0xf1, 0x34, 0x07,
	0x03, 0x97, 0xac, 0x60, 0x8a, 0x02, 0x4f, 0x9b, 0xbf, 0x63, 0x92, 0xd7, 0xe0, 0x56, 0x25, 0x2f,
	0xed, 0xf4, 0x2e, 0xb5, 0xc0, 0x98, 0xda, 0x6e, 0x15, 0xc3, 0xc0, 0x35, 0xe5, 0x0e, 0x45, 0x3f,
	0xc0, 0xa3, 0x4c, 0x35, 0xda, 0xc0, 0x25, 0x4c, 0x2a, 0x51, 0xa8, 0xc0, 0x59, 0x8c, 0x97, 0xf3,
	0xd5, 0x22, 0x7e, 0x32, 0x3b, 0xf1, 0xf7, 0x92, 0x37, 0x15, 0xbb, 0x11, 0x05, 0x35, 0x6c, 0xfd,
	0xba, 0x4c, 0xb4, 0x35, 0x1a, 0x5f, 0x2e, 0xb5, 0x20, 0xfa, 0x3b, 0x02, 0x7f, 0x60, 0x92, 0x97,
	0x30, 0x2a, 0x73, 0xb3, 0x94, 0x09, 0x1d, 0x95, 0xf9, 0xc1, 0xaa, 0x46, 0x8f, 0x56, 0x15, 0x80,
	0x97, 0x09, 0xce, 0xd3, 0x3a, 0x37, 0x9e, 0x7d, 0xda, 0x43, 0xdd, 0x95, 0x49, 0x51, 0xb3, 0x87,
	0x46, 0x76, 0x97, 0x19, 0x30, 0x39, 0x07, 0x3f, 0x93, 0x2c, 0x45, 0x96, 0x6f, 0x76, 0xc6, 0xa1,
	0x4f, 0xf7, 0x05, 0xad, 0xa9, 0x57, 0x23, 0x5a, 0x34, 0xd7, 0x73, 0x69, 0x0f, 0xb5, 0x66, 0x9a,
	0x61, 0x9b, 0xa2, 0x90, 0x81, 0x67, 0x35, 0x7b, 0xac, 0xbb, 0x64, 0x5b, 0xff, 0x14, 0x0a, 0x83,
	0x99, 0x9d, 0xa4, 0x83, 0x43, 0x22, 0xcd, 0x65, 0xfc, 0x13, 0x13, 0x89, 0xfb, 0x44, 0x9a, 0x3e,
	0x38, 0x29, 0x91, 0x78, 0x98, 0xc8, 0xf9, 0x53, 0x89, 0x7c, 0xb1, 0x4f, 0xa4, 0x07, 0xee, 0x35,
	0x6f, 0x70, 0xb7, 0xfa, 0xe5, 0x80, 0xa7, 0xbf, 0x43, 0xbd, 0xfe, 0x5b, 0xf0, 0x3f, 0x9b, 0x5d,
	0x68, 0xf0, 0xec, 0x5d, 0xc3, 0xf3, 0x23, 0x0c, 0x23, 0x1c, 0x9d, 0x91, 0xaf, 0x30, 0xfd, 0xc2,
	0x50, 0x6b, 0x5d, 0x1c, 0x61, 0xf6, 0xdf, 0x44, 0xf8, 0xfe, 0x08, 0xa1, 0x8b, 0x5c, 0x74, 0xb6,
	0x99, 0x1a, 0xdf, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xe8, 0xfd, 0xf9, 0xc7, 0x04,
	0x00, 0x00,
}
